---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import type { Lang } from "../../types/lang.type";
import en from "../../i18n/en";
import es from "../../i18n/es";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
	const projects = await getCollection("project");
	return projects.flatMap((project) => [
		{
			params: { lang: "es" },
		},
		{
			params: { lang: "en" },
		},
	]);
}

const lang = Astro.params.lang as Lang;
const translations: Record<Lang, typeof en> = { es, en };
const t = translations[lang];
let recentProjects;

// Obtener los proyectos desde la colección
try {
	const allProjects = await getCollection("project");

	// Filtrar por idioma y ordenar por fecha descendente
	recentProjects = allProjects
		.filter((p) => p.data.lang === lang)
		.sort((a, b) => {
			const dateA = new Date(a.data.startDate);
			const dateB = new Date(b.data.startDate);
			return dateB.getTime() - dateA.getTime();
		})
		.slice(0, 3); // Solo los 3 más recientes
} catch (error) {
	console.error("Error al obtener los proyectos:", error);
}
---

<BaseLayout sideBarActiveItemID="home" lang={lang}>
	<div class="mt-5 pb-12">
		<div class="py-1 text-xl">{t.home.title}</div>
		<div class="text-4xl font-bold">{t.home.subtitle}</div>
		<div class="py-3 text-xl font-light">{t.home.position}</div>
		<div class="py-2">
			<p class="text-lg font-bold">{t.home.descriptionTitle}</p>
		</div>
		<div class="py-2">
			<p class="text-lg">{t.home.descriptionSubTitle}</p>
		</div>
	</div>

	<div>
		<div class="mb-2 w-full text-3xl font-bold">{t.home.lastProjectsTitle}</div>
	</div>

	<main class="container mx-auto px-4 py-8">
		<div class="grid grid-cols-1 gap-6">
			{recentProjects.map((project) => <HorizontalCard project={project} lang={lang} />)}
		</div>
	</main>
</BaseLayout>
